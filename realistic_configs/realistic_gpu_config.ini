# SimAI 现实世界 GPU 通信延迟仿真配置
# 基于真实硬件规格和实测数据

[simulation]
network_backend = ns3
simulator_binary = auto
verbose_logging = true

[hardware_specs]
# GPU 硬件规格 (基于 H100/A100 真实参数)
gpu_type = H100
gpu_compute_capability = 9.0
gpu_memory_bandwidth_gbps = 3350    # H100 HBM3 带宽
gpu_memory_size_gb = 80             # H100 SXM 内存

# 互连技术规格
nvlink_version = 4.0
nvlink_bandwidth_per_link_gbps = 50  # NVLink 4.0 单链路
nvlink_bidirectional_gbps = 900     # 18 links * 50 GB/s
nvlink_latency_ns = 25               # 实测 NVLink 延迟

pcie_version = 5.0
pcie_lanes = 16
pcie_bandwidth_gbps = 64             # PCIe 5.0 x16
pcie_latency_ns = 500               # PCIe 延迟

# 网络互连 (InfiniBand NDR)
network_technology = InfiniBand_NDR
network_bandwidth_gbps = 400         # NDR 400 Gb/s
network_latency_ns = 1000           # 网络基础延迟
rdma_latency_ns = 700               # RDMA 延迟

[realistic_latency_model]
# 基于实际测量的延迟组件
gpu_kernel_launch_ns = 5000         # GPU 内核启动开销
gpu_compute_per_flop_ns = 0.01      # 计算延迟 (FP16)
memory_access_ns = 150              # HBM 访问延迟
memory_bandwidth_effective = 0.85   # 有效带宽利用率

# PCIe 传输模型
pcie_setup_latency_ns = 2000        # PCIe 事务建立
pcie_effective_bandwidth_ratio = 0.9 # 考虑协议开销

# 网络传输模型
network_serialization_ns = 100      # 序列化延迟
switch_processing_ns = 300          # 交换机处理
protocol_overhead_ns = 200          # TCP/IP + RDMA 开销
congestion_factor = 1.2             # 网络拥塞系数

[workload_realistic_params]
# 真实训练工作负载参数
model_size_params = 175e9           # GPT-3 175B 参数
sequence_length = 2048
batch_size_per_gpu = 4
gradient_accumulation_steps = 32

# 并行策略 (真实大模型训练配置)
tensor_parallel = 8                 # TP
pipeline_parallel = 8              # PP
data_parallel = 64                  # DP
expert_parallel = 1                 # EP

# 通信数据大小 (字节)
allreduce_sizes = [
    4194304,      # 4MB - 小 layer gradients
    16777216,     # 16MB - 中等 layer gradients  
    67108864,     # 64MB - 大 layer gradients
    268435456     # 256MB - 全模型 gradients
]

allgather_sizes = [
    2097152,      # 2MB - activations
    8388608,      # 8MB - intermediate results
    33554432      # 32MB - large activations
]

[network_topology_realistic]
# 现实数据中心网络拓扑
topology_type = Spectrum-X          # NVIDIA Spectrum-X
nodes_per_rack = 8                  # 8 GPU 服务器每机架
gpus_per_server = 8                 # H100 SXM 8-GPU 服务器
racks_per_pod = 32                  # 每个 Pod 32 机架
total_gpus = 2048                   # 总 GPU 数量

# 网络层次带宽
intra_server_bandwidth_gbps = 900   # NVLink intra-server
server_to_tor_bandwidth_gbps = 400  # NDR to ToR
tor_to_spine_bandwidth_gbps = 400   # NDR uplink
spine_bandwidth_gbps = 12800        # Spine switch capacity

# 网络延迟
intra_server_latency_ns = 25        # NVLink
server_to_tor_latency_ns = 500      # ToR switch
tor_to_spine_latency_ns = 1000      # Spine switch
cross_pod_latency_ns = 2000         # 跨 Pod 延迟

[nccl_realistic_params]
# NCCL 实际算法参数
algorithm_allreduce = ring          # Ring AllReduce
algorithm_allgather = ring          # Ring AllGather
algorithm_reduce_scatter = ring     # Ring ReduceScatter

# NCCL 性能参数 (基于 NVIDIA 实测数据)
ring_latency_us = 20                # Ring 算法延迟
tree_latency_us = 15                # Tree 算法延迟
nvls_latency_us = 10                # NVLS 延迟

# 通信带宽 (GB/s，基于 NCCL 性能指南)
intra_node_allreduce_bw = 300       # 节点内 AllReduce
inter_node_allreduce_bw = 45        # 节点间 AllReduce
allgather_bandwidth = 280           # AllGather 带宽
reduce_scatter_bandwidth = 280      # ReduceScatter 带宽

[test_scenarios_realistic]
# 现实测试场景
communication_patterns = [
    "transformer_layer",            # Transformer layer 通信
    "embedding_gradient",           # Embedding 梯度同步
    "optimizer_state_sync",         # 优化器状态同步
    "pipeline_bubble_fill"          # Pipeline bubble filling
]

# 数据大小范围 (基于实际模型)
small_message_sizes = [1024, 4096, 16384]          # < 16KB
medium_message_sizes = [65536, 262144, 1048576]    # 64KB - 1MB  
large_message_sizes = [4194304, 16777216, 67108864] # 4MB - 64MB

# 测试配置
iterations_per_test = 10
warmup_iterations = 3
statistical_significance = 0.95

[output_settings]
results_dir = results/realistic_simulation
save_detailed_breakdown = true
generate_performance_plots = true
export_csv_data = true
export_json_summary = true
